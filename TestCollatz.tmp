==262== Memcheck, a memory error detector
==262== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==262== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==262== Command: ./TestCollatz
==262== 
Running main() from gtest_main.cc
[==========] Running 10 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 10 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (23 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (4 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_3
[       OK ] CollatzFixture.eval_3 (3 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (2 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (3 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (2 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (3 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (8 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (6 ms)
[----------] 10 tests from CollatzFixture (72 ms total)

[----------] Global test environment tear-down
[==========] 10 tests from 1 test case ran. (130 ms total)
[  PASSED  ] 10 tests.
==262== 
==262== HEAP SUMMARY:
==262==     in use at exit: 72,704 bytes in 1 blocks
==262==   total heap usage: 237 allocs, 236 frees, 129,648 bytes allocated
==262== 
==262== LEAK SUMMARY:
==262==    definitely lost: 0 bytes in 0 blocks
==262==    indirectly lost: 0 bytes in 0 blocks
==262==      possibly lost: 0 bytes in 0 blocks
==262==    still reachable: 72,704 bytes in 1 blocks
==262==         suppressed: 0 bytes in 0 blocks
==262== Rerun with --leak-check=full to see details of leaked memory
==262== 
==262== For counts of detected and suppressed errors, rerun with: -v
==262== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:89.66% of 29
Branches executed:100.00% of 24
Taken at least once:79.17% of 24
Calls executed:100.00% of 15
Creating 'Collatz.c++.gcov'
