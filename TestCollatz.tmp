==2541== Memcheck, a memory error detector
==2541== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==2541== Using Valgrind-3.10.0 and LibVEX; rerun with -h for copyright info
==2541== Command: ./TestCollatz
==2541== 
Running main() from gtest_main.cc
[==========] Running 10 tests from 1 test case.
[----------] Global test environment set-up.
[----------] 10 tests from CollatzFixture
[ RUN      ] CollatzFixture.read
[       OK ] CollatzFixture.read (34 ms)
[ RUN      ] CollatzFixture.eval_1
[       OK ] CollatzFixture.eval_1 (14 ms)
[ RUN      ] CollatzFixture.eval_2
[       OK ] CollatzFixture.eval_2 (2 ms)
[ RUN      ] CollatzFixture.eval_4
[       OK ] CollatzFixture.eval_4 (3 ms)
[ RUN      ] CollatzFixture.eval_5
[       OK ] CollatzFixture.eval_5 (27 ms)
[ RUN      ] CollatzFixture.eval_6
[       OK ] CollatzFixture.eval_6 (5 ms)
[ RUN      ] CollatzFixture.eval_7
[       OK ] CollatzFixture.eval_7 (33 ms)
[ RUN      ] CollatzFixture.eval_8
[       OK ] CollatzFixture.eval_8 (4 ms)
[ RUN      ] CollatzFixture.print
[       OK ] CollatzFixture.print (12 ms)
[ RUN      ] CollatzFixture.solve
[       OK ] CollatzFixture.solve (66 ms)
[----------] 10 tests from CollatzFixture (223 ms total)

[----------] Global test environment tear-down
[==========] 10 tests from 1 test case ran. (310 ms total)
[  PASSED  ] 10 tests.
==2541== 
==2541== HEAP SUMMARY:
==2541==     in use at exit: 72,704 bytes in 1 blocks
==2541==   total heap usage: 237 allocs, 236 frees, 129,648 bytes allocated
==2541== 
==2541== LEAK SUMMARY:
==2541==    definitely lost: 0 bytes in 0 blocks
==2541==    indirectly lost: 0 bytes in 0 blocks
==2541==      possibly lost: 0 bytes in 0 blocks
==2541==    still reachable: 72,704 bytes in 1 blocks
==2541==         suppressed: 0 bytes in 0 blocks
==2541== Rerun with --leak-check=full to see details of leaked memory
==2541== 
==2541== For counts of detected and suppressed errors, rerun with: -v
==2541== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
File 'Collatz.c++'
Lines executed:81.82% of 33
Branches executed:88.24% of 34
Taken at least once:61.76% of 34
Calls executed:84.21% of 19
Creating 'Collatz.c++.gcov'
